<html>
<head>
	<title>WE!J</title>

	<script type="text/javascript" src="js/prototype.js"></script>

	<script type="text/javascript" src="js/scriptaculous.js"></script>

	<link rel="Stylesheet" href="seq.css" />

	<script type="text/javascript" src="common.js"></script>

	<script type="text/javascript">




function onPollData( r )
{
	var cmd = r.responseText.split('|');
	// console.log( 'poll got: ', cmd );
	if( cmd.length > 0 )
	{
		if( cmd[0] == 'instrument-created' ||
			cmd[0] == 'instrument-updated' ||
			cmd[0] == 'instrument-deleted' )
		{
			updateInstrumentsList();
		}
	}
	setTimeout( 'pollOnce()', 1000 );
}

function pollOnce()
{
	var sid = getCurrentSessionID();
	new Ajax.Request( '../c.aspx', {
		parameters:{ 'poll': sid },
		onSuccess:onPollData } );
}

function beginPolling()
{
	setTimeout( 'pollOnce()', 1000 );
}


function createNewInstrument()
{
	var p = prompt( 'Please provide a name for your new instrument', '' );
	if( p && p != '' )
	{
		var ins = randomid('ins');
		var sid = getCurrentSessionID();
		new Ajax.Request( '../c.aspx?', {
			parameters: { 
				'createinstrument': ins,
				'session': sid,
				'name': p
			},
			onSuccess:onUpdatedInstrument } );
	}
}

function removeCurrentInstrument()
{
	if( confirm( 'Are you sure you want to delete this instrument?' ) == 1 )
	{
		var ins = getCurrentInstrumentID();
		var sid = getCurrentSessionID();
		new Ajax.Request( '../c.aspx?', {
			parameters: { 
				'deleteinstrument': ins,
				'session': sid
			},
			onSuccess:onUpdatedInstrument } );
	}
}

function onInstrumentList( r )
{
	var el = $('instrumentdropdown');
	el.options.length = 0;
	
	var data = r.responseText.evalJSON(false);
	for( var j=0; j<data.instruments.length; j++ )
	{	
		var item = data.instruments[j];
		el.options[ el.options.length ] = new Option( item.name, item.id );	
	}
	
	el.selectedIndex = 0;
	
	beginLoadInstrument();
}

function updateInstrumentsList()
{
	new Ajax.Request( '../c.aspx?', {
			parameters: { 'getinstrumentlist':'1' },
			onSuccess:onInstrumentList
		} );
}

function getCurrentInstrumentID()
{
	var el2 = $('instrumentdropdown');
	var pat = el2.options[ el2.selectedIndex ].value;
	return pat;
}


function changeInstrument( event )
{
	beginLoadInstrument();
}

var g_CurrentInstrument = null;

function onInstrumentData( r )
{
	var data = r.responseText.evalJSON(false);
	console.log( data );
	
	g_CurrentInstrument = data;
	
	$('insname').value = g_CurrentInstrument.name;
	$('instype').value = g_CurrentInstrument.type;
	$('inschannel').value = g_CurrentInstrument.midichannel;
	$('insdevice').value = g_CurrentInstrument.mididevice;
	$('inspatch').value = g_CurrentInstrument.midipatch;
}

function beginLoadInstrument()
{
	var ins = getCurrentInstrumentID();
	new Ajax.Request( '../c.aspx?', {
			parameters: { 'getinstrument':ins },
			onSuccess:onInstrumentData
		} );
	
}

function propertyChanged(event)
{
	saveInstrument();
}

function onUpdatedInstrument( r ) 
{
	updateInstrumentsList();
}

function saveInstrument()
{
	var ins = getCurrentInstrumentID();
	var sid = getCurrentSessionID();
	new Ajax.Request( '../c.aspx?', {
		parameters: { 
			'updateinstrument': ins,
			'session': sid,
			'name': $('insname').value,
			'type': $('instype').value,
			'midichannel': $('inschannel').value,
			'mididevice': $('insdevice').value,
			'midipatch': $('inspatch').value
		},
		onSuccess:onUpdatedInstrument } );
}












function initInstrumentsView()
{
	initPageHeader('INS');
	updateInstrumentsList();
	beginPolling();
}

	</script>

</head>
<body class="seq" onload="initInstrumentsView();">
	<div class="headerblock" id="headerblock">
	</div>
	<div class="mainblock">
		<div class="innermainblock">
			<div class="instrumenteditor-content">
				<div class="instrumenteditor-top">
					<ul class="toolbar">
						<li><big>Instrument editor</big></li>
						<li></li>
						<li><span>Instrument:</span> </li>
						<li>
							<select id="instrumentdropdown" onchange="changeInstrument(event);">
								<option>Loading...</option>
							</select>
						</li>
						<li><span><a href="javascript:createNewInstrument();">New instrument</a> | <a href="javascript:removeCurrentInstrument();">
							Remove instrument</a></span></li>
						<li></li>
						<li class="last"></li>
					</ul>
				</div>
				<div class="instrumenteditor-body">
					<div class="inner">
						<p>
							Name:<br />
							<input id="insname" onchange="propertyChanged(event);" />
						</p>
						<p>
							Instrument template:<br />
							<input id="instype" onchange="propertyChanged(event);" />
						</p>
						<p>
							MIDI Device:<br />
							<input id="insdevice" onchange="propertyChanged(event);" />
						</p>
						<p>
							MIDI Channel:<br />
							<input id="inschannel" onchange="propertyChanged(event);" />
						</p>
						<p>
							MIDI Patch:<br />
							<input id="inspatch" onchange="propertyChanged(event);" />
						</p>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="footerblock">
	</div>
</body>
</html>
