; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9030 

	TITLE	parts\p_aftershit.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0P@BNGPPGPK@glass?5?5?$CIc?$CJ2000?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@NPEOKHEP@r?4i?4p?5lolo?5ferrari?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@GDEDCFLL@illuminator?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@ENDNLGBE@code?0?5graphics?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05NBLAGAKD@h?9ecs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@MEJABCBK@music?0?5graphics?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@ONCMBCOC@hanzon?0?5summlan?0?5weird?5ed?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05EMILFNFA@ideas?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pas_drawbackground@@YAXMMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pas_renderfade@@YAXM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pas_drawtitle@@YAXM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pas_drawcreds@@YAXM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?p_aftershit_run@@YAXPAUEVENT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCD
INCLUDELIB OLDNAMES

PUBLIC	?pas_drawbackground@@YAXMMMM@Z			; pas_drawbackground
PUBLIC	__real@40accccd
PUBLIC	__real@40400000
PUBLIC	__real@40c33333
PUBLIC	__real@4059999a
PUBLIC	__real@40800000
PUBLIC	__real@41a00000
PUBLIC	__real@3f000000
PUBLIC	__real@41700000
PUBLIC	__real@41980000
PUBLIC	__real@41600000
PUBLIC	__real@3f88f5c3
PUBLIC	__real@3f800000
EXTRN	_cos:NEAR
EXTRN	_sin:NEAR
EXTRN	__imp__glTexCoord2f@8:NEAR
EXTRN	?_pd@@3PAMA:DWORD				; _pd
EXTRN	?_pu@@3PAMA:DWORD				; _pu
EXTRN	?_pv@@3PAMA:DWORD				; _pv
EXTRN	__imp__glBegin@4:NEAR
EXTRN	__imp__glVertex3f@12:NEAR
EXTRN	__imp__glColor3f@12:NEAR
EXTRN	__fltused:NEAR
EXTRN	__imp__glEnd@0:NEAR
;	COMDAT __real@40accccd
; File d:\code\prj64k\glass (eventad)\parts\p_aftershit.cpp
CONST	SEGMENT
__real@40accccd DD 040accccdr			; 5.4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40c33333
CONST	SEGMENT
__real@40c33333 DD 040c33333r			; 6.1
CONST	ENDS
;	COMDAT __real@4059999a
CONST	SEGMENT
__real@4059999a DD 04059999ar			; 3.4
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@41980000
CONST	SEGMENT
__real@41980000 DD 041980000r			; 19
CONST	ENDS
;	COMDAT __real@41600000
CONST	SEGMENT
__real@41600000 DD 041600000r			; 14
CONST	ENDS
;	COMDAT __real@3f88f5c3
CONST	SEGMENT
__real@3f88f5c3 DD 03f88f5c3r			; 1.07
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?pas_drawbackground@@YAXMMMM@Z
_TEXT	SEGMENT
tv294 = -120
tv293 = -116
tv318 = -112
tv314 = -112
tv308 = -112
tv301 = -112
tv290 = -112
_y2$19948 = -44
_x2$19946 = -40
_y$19944 = -36
_x$19942 = -32
_o$19941 = -28
_nx$19934 = -24
_ny$19933 = -20
_o$19932 = -16
_o$19919 = -12
_j$ = -8
_i$ = -4
_t1$ = 8
_t2$ = 12
_scale$ = 16
_br$ = 20
?pas_drawbackground@@YAXMMMM@Z PROC NEAR		; pas_drawbackground, COMDAT
; Line 5
	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	push	ebx
	push	esi
	push	edi
; Line 9
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $L19913
$L19914:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$L19913:
	cmp	DWORD PTR _j$[ebp], 30			; 0000001eH
	jge	$L19915
; Line 10
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L19916
$L19917:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L19916:
	cmp	DWORD PTR _i$[ebp], 40			; 00000028H
	jge	$L19918
; Line 11
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 40					; 00000028H
	add	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _o$19919[ebp], eax
; Line 12
	mov	eax, DWORD PTR _o$19919[ebp]
	mov	ecx, DWORD PTR ?_pd@@3PAMA		; _pd
	mov	DWORD PTR [ecx+eax*4], 1073741824	; 40000000H
; Line 13
	fild	DWORD PTR _j$[ebp]
	fsub	DWORD PTR _t2$[ebp]
	fdiv	DWORD PTR __real@40accccd
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_cos
	add	esp, 8
	fst	DWORD PTR tv290[ebp]
	fmul	DWORD PTR __real@40400000
	fstp	DWORD PTR tv293[ebp]
	fild	DWORD PTR _i$[ebp]
	fsub	DWORD PTR _t1$[ebp]
	fdiv	DWORD PTR __real@40c33333
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_cos
	add	esp, 8
	fst	DWORD PTR tv294[ebp]
	fmul	DWORD PTR tv293[ebp]
	mov	eax, DWORD PTR _o$19919[ebp]
	mov	ecx, DWORD PTR ?_pd@@3PAMA		; _pd
	fadd	DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR _o$19919[ebp]
	mov	eax, DWORD PTR ?_pd@@3PAMA		; _pd
	fstp	DWORD PTR [eax+edx*4]
; Line 14
	fild	DWORD PTR _i$[ebp]
	fsub	DWORD PTR _t1$[ebp]
	fdiv	DWORD PTR __real@4059999a
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sin
	add	esp, 8
	fst	DWORD PTR tv301[ebp]
	fadd	ST(0), ST(0)
	mov	eax, DWORD PTR _o$19919[ebp]
	mov	ecx, DWORD PTR ?_pd@@3PAMA		; _pd
	fadd	DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR _o$19919[ebp]
	mov	eax, DWORD PTR ?_pd@@3PAMA		; _pd
	fstp	DWORD PTR [eax+edx*4]
; Line 15
	fild	DWORD PTR _j$[ebp]
	fsub	DWORD PTR _t2$[ebp]
	fdiv	DWORD PTR __real@40800000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_cos
	add	esp, 8
	fst	DWORD PTR tv308[ebp]
	fadd	ST(0), ST(0)
	mov	eax, DWORD PTR _o$19919[ebp]
	mov	ecx, DWORD PTR ?_pd@@3PAMA		; _pd
	fadd	DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR _o$19919[ebp]
	mov	eax, DWORD PTR ?_pd@@3PAMA		; _pd
	fstp	DWORD PTR [eax+edx*4]
; Line 16
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 20					; 00000014H
	mov	DWORD PTR tv314[ebp], eax
	fild	DWORD PTR tv314[ebp]
	fmul	DWORD PTR _scale$[ebp]
	fdiv	DWORD PTR __real@41a00000
	fadd	DWORD PTR __real@3f000000
	mov	ecx, DWORD PTR _o$19919[ebp]
	mov	edx, DWORD PTR ?_pu@@3PAMA		; _pu
	fstp	DWORD PTR [edx+ecx*4]
; Line 17
	mov	eax, DWORD PTR _j$[ebp]
	sub	eax, 15					; 0000000fH
	mov	DWORD PTR tv318[ebp], eax
	fild	DWORD PTR tv318[ebp]
	fmul	DWORD PTR _scale$[ebp]
	fdiv	DWORD PTR __real@41700000
	fadd	DWORD PTR __real@3f000000
	mov	ecx, DWORD PTR _o$19919[ebp]
	mov	edx, DWORD PTR ?_pv@@3PAMA		; _pv
	fstp	DWORD PTR [edx+ecx*4]
; Line 18
	jmp	$L19917
$L19918:
; Line 19
	jmp	$L19914
$L19915:
; Line 22
	mov	DWORD PTR _j$[ebp], 1
	jmp	SHORT $L19926
$L19927:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$L19926:
	cmp	DWORD PTR _j$[ebp], 29			; 0000001dH
	jge	$L19928
; Line 23
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $L19929
$L19930:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L19929:
	cmp	DWORD PTR _i$[ebp], 39			; 00000027H
	jge	$L19931
; Line 24
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 40					; 00000028H
	add	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _o$19932[ebp], eax
; Line 25
	mov	eax, DWORD PTR _o$19932[ebp]
	mov	ecx, DWORD PTR ?_pd@@3PAMA		; _pd
	mov	edx, DWORD PTR _o$19932[ebp]
	mov	esi, DWORD PTR ?_pd@@3PAMA		; _pd
	fld	DWORD PTR [ecx+eax*4+160]
	fsub	DWORD PTR [esi+edx*4-160]
	fstp	DWORD PTR _ny$19933[ebp]
; Line 26
	mov	eax, DWORD PTR _o$19932[ebp]
	mov	ecx, DWORD PTR ?_pd@@3PAMA		; _pd
	mov	edx, DWORD PTR _o$19932[ebp]
	mov	esi, DWORD PTR ?_pd@@3PAMA		; _pd
	fld	DWORD PTR [ecx+eax*4+4]
	fsub	DWORD PTR [esi+edx*4-4]
	fstp	DWORD PTR _nx$19934[ebp]
; Line 27
	fld	DWORD PTR _nx$19934[ebp]
	fdiv	DWORD PTR __real@40400000
	mov	eax, DWORD PTR _o$19932[ebp]
	mov	ecx, DWORD PTR ?_pu@@3PAMA		; _pu
	fadd	DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR _o$19932[ebp]
	mov	eax, DWORD PTR ?_pu@@3PAMA		; _pu
	fstp	DWORD PTR [eax+edx*4]
; Line 28
	fld	DWORD PTR _ny$19933[ebp]
	fdiv	DWORD PTR __real@40400000
	mov	eax, DWORD PTR _o$19932[ebp]
	mov	ecx, DWORD PTR ?_pv@@3PAMA		; _pv
	fadd	DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR _o$19932[ebp]
	mov	eax, DWORD PTR ?_pv@@3PAMA		; _pv
	fstp	DWORD PTR [eax+edx*4]
; Line 29
	jmp	$L19930
$L19931:
; Line 30
	jmp	$L19927
$L19928:
; Line 33
	push	7
	call	DWORD PTR __imp__glBegin@4
; Line 34
	mov	DWORD PTR _j$[ebp], 1
	jmp	SHORT $L19935
$L19936:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$L19935:
	cmp	DWORD PTR _j$[ebp], 29			; 0000001dH
	jge	$L19937
; Line 35
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $L19938
$L19939:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L19938:
	cmp	DWORD PTR _i$[ebp], 39			; 00000027H
	jge	$L19940
; Line 36
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 40					; 00000028H
	add	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _o$19941[ebp], eax
; Line 37
	fild	DWORD PTR _i$[ebp]
	fsub	DWORD PTR __real@41a00000
	fdiv	DWORD PTR __real@41a00000
	fstp	DWORD PTR _x$19942[ebp]
; Line 38
	fild	DWORD PTR _j$[ebp]
	fsub	DWORD PTR __real@41700000
	fdiv	DWORD PTR __real@41700000
	fstp	DWORD PTR _y$19944[ebp]
; Line 39
	fild	DWORD PTR _i$[ebp]
	fsub	DWORD PTR __real@41980000
	fdiv	DWORD PTR __real@41a00000
	fstp	DWORD PTR _x2$19946[ebp]
; Line 40
	fild	DWORD PTR _j$[ebp]
	fsub	DWORD PTR __real@41600000
	fdiv	DWORD PTR __real@41700000
	fstp	DWORD PTR _y2$19948[ebp]
; Line 41
	fld	DWORD PTR _x$19942[ebp]
	fmul	DWORD PTR __real@3f88f5c3
	fstp	DWORD PTR _x$19942[ebp]
; Line 42
	fld	DWORD PTR _y$19944[ebp]
	fmul	DWORD PTR __real@3f88f5c3
	fstp	DWORD PTR _y$19944[ebp]
; Line 43
	fld	DWORD PTR _x2$19946[ebp]
	fmul	DWORD PTR __real@3f88f5c3
	fstp	DWORD PTR _x2$19946[ebp]
; Line 44
	fld	DWORD PTR _y2$19948[ebp]
	fmul	DWORD PTR __real@3f88f5c3
	fstp	DWORD PTR _y2$19948[ebp]
; Line 46
	mov	eax, DWORD PTR _br$[ebp]
	push	eax
	mov	ecx, DWORD PTR _br$[ebp]
	push	ecx
	mov	edx, DWORD PTR _br$[ebp]
	push	edx
	call	DWORD PTR __imp__glColor3f@12
; Line 48
	mov	eax, DWORD PTR _o$19941[ebp]
	mov	ecx, DWORD PTR ?_pv@@3PAMA		; _pv
	fld	DWORD PTR __real@3f800000
	fsub	DWORD PTR [ecx+eax*4]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _o$19941[ebp]
	mov	eax, DWORD PTR ?_pu@@3PAMA		; _pu
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	call	DWORD PTR __imp__glTexCoord2f@8
; Line 49
	push	0
	mov	eax, DWORD PTR _y$19944[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$19942[ebp]
	push	ecx
	call	DWORD PTR __imp__glVertex3f@12
; Line 51
	mov	eax, DWORD PTR _o$19941[ebp]
	mov	ecx, DWORD PTR ?_pv@@3PAMA		; _pv
	fld	DWORD PTR __real@3f800000
	fsub	DWORD PTR [ecx+eax*4+4]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _o$19941[ebp]
	mov	eax, DWORD PTR ?_pu@@3PAMA		; _pu
	mov	ecx, DWORD PTR [eax+edx*4+4]
	push	ecx
	call	DWORD PTR __imp__glTexCoord2f@8
; Line 52
	push	0
	mov	eax, DWORD PTR _y$19944[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$19946[ebp]
	push	ecx
	call	DWORD PTR __imp__glVertex3f@12
; Line 54
	mov	eax, DWORD PTR _o$19941[ebp]
	mov	ecx, DWORD PTR ?_pv@@3PAMA		; _pv
	fld	DWORD PTR __real@3f800000
	fsub	DWORD PTR [ecx+eax*4+164]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _o$19941[ebp]
	mov	eax, DWORD PTR ?_pu@@3PAMA		; _pu
	mov	ecx, DWORD PTR [eax+edx*4+164]
	push	ecx
	call	DWORD PTR __imp__glTexCoord2f@8
; Line 55
	push	0
	mov	eax, DWORD PTR _y2$19948[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$19946[ebp]
	push	ecx
	call	DWORD PTR __imp__glVertex3f@12
; Line 57
	mov	eax, DWORD PTR _o$19941[ebp]
	mov	ecx, DWORD PTR ?_pv@@3PAMA		; _pv
	fld	DWORD PTR __real@3f800000
	fsub	DWORD PTR [ecx+eax*4+160]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _o$19941[ebp]
	mov	eax, DWORD PTR ?_pu@@3PAMA		; _pu
	mov	ecx, DWORD PTR [eax+edx*4+160]
	push	ecx
	call	DWORD PTR __imp__glTexCoord2f@8
; Line 58
	push	0
	mov	eax, DWORD PTR _y2$19948[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$19942[ebp]
	push	ecx
	call	DWORD PTR __imp__glVertex3f@12
; Line 59
	jmp	$L19939
$L19940:
; Line 60
	jmp	$L19936
$L19937:
; Line 61
	call	DWORD PTR __imp__glEnd@0
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?pas_drawbackground@@YAXMMMM@Z ENDP			; pas_drawbackground
_TEXT	ENDS
PUBLIC	?pas_renderfade@@YAXM@Z				; pas_renderfade
PUBLIC	__real@40a00000
PUBLIC	__real@00000000
PUBLIC	__real@41280000
PUBLIC	__real@41200000
EXTRN	__imp__glDisable@4:NEAR
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@41280000
CONST	SEGMENT
__real@41280000 DD 041280000r			; 10.5
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?pas_renderfade@@YAXM@Z
_TEXT	SEGMENT
_w$19963 = -20
_x$19961 = -16
_t2$19958 = -12
_i$19954 = -8
_magic$ = -4
_t$ = 8
?pas_renderfade@@YAXM@Z PROC NEAR			; pas_renderfade, COMDAT
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
; Line 65
	push	3553					; 00000de1H
	call	DWORD PTR __imp__glDisable@4
; Line 66
	push	7
	call	DWORD PTR __imp__glBegin@4
; Line 67
	mov	DWORD PTR _magic$[ebp], 1028443341	; 3d4ccccdH
; Line 68
	mov	DWORD PTR _i$19954[ebp], 0
	jmp	SHORT $L19955
$L19956:
	fld	DWORD PTR _i$19954[ebp]
	fadd	DWORD PTR __real@3f800000
	fstp	DWORD PTR _i$19954[ebp]
$L19955:
	fld	DWORD PTR _i$19954[ebp]
	fcomp	DWORD PTR __real@41a00000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	$L19957
; Line 70
	fld	DWORD PTR _i$19954[ebp]
	fdiv	DWORD PTR __real@40a00000
	fsubr	DWORD PTR _t$[ebp]
	fstp	DWORD PTR _t2$19958[ebp]
; Line 71
	fld	DWORD PTR _t2$19958[ebp]
	fcomp	DWORD PTR __real@00000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	$L19959
; Line 72
	fld	DWORD PTR _t2$19958[ebp]
	fcomp	DWORD PTR __real@3f800000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $L19960
	mov	DWORD PTR _t2$19958[ebp], 1065353216	; 3f800000H
$L19960:
; Line 74
	fld	DWORD PTR _i$19954[ebp]
	fsub	DWORD PTR __real@41280000
	fdiv	DWORD PTR __real@41200000
	fstp	DWORD PTR _x$19961[ebp]
; Line 75
	fld	DWORD PTR _magic$[ebp]
	fsub	DWORD PTR _t2$19958[ebp]
	fstp	DWORD PTR _w$19963[ebp]
; Line 76
	fld	DWORD PTR _t2$19958[ebp]
	fmul	DWORD PTR _magic$[ebp]
	fstp	DWORD PTR _w$19963[ebp]
; Line 77
	fld	DWORD PTR _w$19963[ebp]
	fcomp	DWORD PTR _magic$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $L19964
	mov	eax, DWORD PTR _magic$[ebp]
	mov	DWORD PTR _w$19963[ebp], eax
$L19964:
; Line 80
	mov	eax, DWORD PTR _t2$19958[ebp]
	push	eax
	mov	ecx, DWORD PTR _t2$19958[ebp]
	push	ecx
	mov	edx, DWORD PTR _t2$19958[ebp]
	push	edx
	call	DWORD PTR __imp__glColor3f@12
; Line 82
	push	0
	push	-1082130432				; bf800000H
	fld	DWORD PTR _x$19961[ebp]
	fsub	DWORD PTR _w$19963[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	DWORD PTR __imp__glVertex3f@12
; Line 83
	push	0
	push	-1082130432				; bf800000H
	fld	DWORD PTR _x$19961[ebp]
	fadd	DWORD PTR _w$19963[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	DWORD PTR __imp__glVertex3f@12
; Line 84
	push	0
	push	1065353216				; 3f800000H
	fld	DWORD PTR _x$19961[ebp]
	fadd	DWORD PTR _w$19963[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	DWORD PTR __imp__glVertex3f@12
; Line 85
	push	0
	push	1065353216				; 3f800000H
	fld	DWORD PTR _x$19961[ebp]
	fsub	DWORD PTR _w$19963[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	DWORD PTR __imp__glVertex3f@12
$L19959:
; Line 87
	jmp	$L19956
$L19957:
; Line 88
	call	DWORD PTR __imp__glEnd@0
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?pas_renderfade@@YAXM@Z ENDP				; pas_renderfade
_TEXT	ENDS
PUBLIC	?pas_drawtitle@@YAXM@Z				; pas_drawtitle
PUBLIC	??_C@_0P@BNGPPGPK@glass?5?5?$CIc?$CJ2000?$AA@	; `string'
PUBLIC	??_C@_0BD@NPEOKHEP@r?4i?4p?5lolo?5ferrari?$AA@	; `string'
PUBLIC	__real@40000000
PUBLIC	__real@40491687
PUBLIC	__real@40c00000
PUBLIC	__real@be99999a
EXTRN	?glaSetTexture@@YAXH@Z:NEAR			; glaSetTexture
EXTRN	?glaQuadR@@YAXMMMMMMMMMM@Z:NEAR			; glaQuadR
EXTRN	?glaDrawString@@YAXMMMMMMPAD@Z:NEAR		; glaDrawString
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@40491687
CONST	SEGMENT
__real@40491687 DD 040491687r			; 3.142
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT ??_C@_0P@BNGPPGPK@glass?5?5?$CIc?$CJ2000?$AA@
CONST	SEGMENT
??_C@_0P@BNGPPGPK@glass?5?5?$CIc?$CJ2000?$AA@ DB 'glass  (c)2000', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NPEOKHEP@r?4i?4p?5lolo?5ferrari?$AA@
CONST	SEGMENT
??_C@_0BD@NPEOKHEP@r?4i?4p?5lolo?5ferrari?$AA@ DB 'r.i.p lolo ferrari', 00H ; `string'
CONST	ENDS
;	COMDAT __real@be99999a
CONST	SEGMENT
__real@be99999a DD 0be99999ar			; -0.3
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?pas_drawtitle@@YAXM@Z
_TEXT	SEGMENT
tv167 = -72
tv159 = -72
_fadein$ = -4
_t$ = 8
?pas_drawtitle@@YAXM@Z PROC NEAR			; pas_drawtitle, COMDAT
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
; Line 94
	mov	DWORD PTR _fadein$[ebp], 0
; Line 95
	fld	DWORD PTR _t$[ebp]
	fcomp	DWORD PTR __real@40000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L19969
; Line 96
	fld	DWORD PTR _t$[ebp]
	fmul	DWORD PTR __real@40491687
	fdiv	DWORD PTR __real@40800000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sin
	add	esp, 8
	fst	DWORD PTR tv159[ebp]
	fadd	ST(0), ST(0)
	fsubr	DWORD PTR __real@40000000
	fstp	DWORD PTR _fadein$[ebp]
$L19969:
; Line 97
	fld	DWORD PTR _t$[ebp]
	fcomp	DWORD PTR __real@40800000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $L19971
; Line 98
	fld	DWORD PTR __real@40c00000
	fsub	DWORD PTR _t$[ebp]
	fmul	DWORD PTR __real@40491687
	fdiv	DWORD PTR __real@40800000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sin
	add	esp, 8
	fst	DWORD PTR tv167[ebp]
	fadd	ST(0), ST(0)
	fsubr	DWORD PTR __real@40000000
	fstp	DWORD PTR _fadein$[ebp]
$L19971:
; Line 100
	push	112					; 00000070H
	call	?glaSetTexture@@YAXH@Z			; glaSetTexture
	add	esp, 4
; Line 102
	push	7
	call	DWORD PTR __imp__glBegin@4
; Line 103
	push	1065353216				; 3f800000H
	push	1065353216				; 3f800000H
	push	1065353216				; 3f800000H
	call	DWORD PTR __imp__glColor3f@12
; Line 104
	push	0
	push	1065353216				; 3f800000H
	push	1065353216				; 3f800000H
	push	0
	push	1045220557				; 3e4ccccdH
	push	1058642330				; 3f19999aH
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _fadein$[ebp]
	push	eax
	call	?glaQuadR@@YAXMMMMMMMMMM@Z		; glaQuadR
	add	esp, 40					; 00000028H
; Line 105
	call	DWORD PTR __imp__glEnd@0
; Line 107
	push	106					; 0000006aH
	call	?glaSetTexture@@YAXH@Z			; glaSetTexture
	add	esp, 4
; Line 109
	push	7
	call	DWORD PTR __imp__glBegin@4
; Line 110
	push	1065353216				; 3f800000H
	push	1065353216				; 3f800000H
	push	1065353216				; 3f800000H
	call	DWORD PTR __imp__glColor3f@12
; Line 111
	push	OFFSET FLAT:??_C@_0P@BNGPPGPK@glass?5?5?$CIc?$CJ2000?$AA@
	push	1036831949				; 3dcccccdH
	push	1023879938				; 3d072b02H
	push	1023879938				; 3d072b02H
	push	0
	push	1050253722				; 3e99999aH
	fld	DWORD PTR _fadein$[ebp]
	fchs
	push	ecx
	fstp	DWORD PTR [esp]
	call	?glaDrawString@@YAXMMMMMMPAD@Z		; glaDrawString
	add	esp, 28					; 0000001cH
; Line 113
	push	OFFSET FLAT:??_C@_0BD@NPEOKHEP@r?4i?4p?5lolo?5ferrari?$AA@
	push	1028443341				; 3d4ccccdH
	push	1020054733				; 3ccccccdH
	push	1020054733				; 3ccccccdH
	push	0
	fld	DWORD PTR __real@be99999a
	fadd	DWORD PTR _fadein$[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	push	0
	call	?glaDrawString@@YAXMMMMMMPAD@Z		; glaDrawString
	add	esp, 28					; 0000001cH
; Line 114
	call	DWORD PTR __imp__glEnd@0
; Line 115
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?pas_drawtitle@@YAXM@Z ENDP				; pas_drawtitle
_TEXT	ENDS
PUBLIC	?pas_drawcreds@@YAXM@Z				; pas_drawcreds
PUBLIC	??_C@_0M@GDEDCFLL@illuminator?$AA@		; `string'
PUBLIC	??_C@_0P@ENDNLGBE@code?0?5graphics?$AA@		; `string'
PUBLIC	??_C@_05NBLAGAKD@h?9ecs?$AA@			; `string'
PUBLIC	??_C@_0BA@MEJABCBK@music?0?5graphics?$AA@	; `string'
PUBLIC	??_C@_0BK@ONCMBCOC@hanzon?0?5summlan?0?5weird?5ed?$AA@ ; `string'
PUBLIC	??_C@_05EMILFNFA@ideas?$AA@			; `string'
PUBLIC	__real@3fd9999a
PUBLIC	__real@3fcccccd
PUBLIC	__real@3f8ccccd
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3ffc28f6
PUBLIC	__real@3f333333
PUBLIC	__real@bf000000
PUBLIC	__real@3f570a3d
PUBLIC	__real@bf19999a
PUBLIC	__real@3fb5c28f
;	COMDAT ??_C@_0M@GDEDCFLL@illuminator?$AA@
CONST	SEGMENT
??_C@_0M@GDEDCFLL@illuminator?$AA@ DB 'illuminator', 00H ; `string'
CONST	ENDS
;	COMDAT __real@3fd9999a
CONST	SEGMENT
__real@3fd9999a DD 03fd9999ar			; 1.7
CONST	ENDS
;	COMDAT ??_C@_0P@ENDNLGBE@code?0?5graphics?$AA@
CONST	SEGMENT
??_C@_0P@ENDNLGBE@code?0?5graphics?$AA@ DB 'code, graphics', 00H ; `string'
CONST	ENDS
;	COMDAT __real@3fcccccd
CONST	SEGMENT
__real@3fcccccd DD 03fcccccdr			; 1.6
CONST	ENDS
;	COMDAT ??_C@_05NBLAGAKD@h?9ecs?$AA@
CONST	SEGMENT
??_C@_05NBLAGAKD@h?9ecs?$AA@ DB 'h-ecs', 00H		; `string'
CONST	ENDS
;	COMDAT __real@3f8ccccd
CONST	SEGMENT
__real@3f8ccccd DD 03f8ccccdr			; 1.1
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT ??_C@_0BA@MEJABCBK@music?0?5graphics?$AA@
CONST	SEGMENT
??_C@_0BA@MEJABCBK@music?0?5graphics?$AA@ DB 'music, graphics', 00H ; `string'
CONST	ENDS
;	COMDAT __real@3ffc28f6
CONST	SEGMENT
__real@3ffc28f6 DD 03ffc28f6r			; 1.97
CONST	ENDS
;	COMDAT ??_C@_0BK@ONCMBCOC@hanzon?0?5summlan?0?5weird?5ed?$AA@
CONST	SEGMENT
??_C@_0BK@ONCMBCOC@hanzon?0?5summlan?0?5weird?5ed?$AA@ DB 'hanzon, summla'
	DB	'n, weird ed', 00H				; `string'
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ??_C@_05EMILFNFA@ideas?$AA@
CONST	SEGMENT
??_C@_05EMILFNFA@ideas?$AA@ DB 'ideas', 00H		; `string'
CONST	ENDS
;	COMDAT __real@3f570a3d
CONST	SEGMENT
__real@3f570a3d DD 03f570a3dr			; 0.84
CONST	ENDS
;	COMDAT __real@bf19999a
CONST	SEGMENT
__real@bf19999a DD 0bf19999ar			; -0.6
CONST	ENDS
;	COMDAT __real@3fb5c28f
CONST	SEGMENT
__real@3fb5c28f DD 03fb5c28fr			; 1.42
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?pas_drawcreds@@YAXM@Z
_TEXT	SEGMENT
tv189 = -72
tv181 = -72
_fadein$ = -4
_t$ = 8
?pas_drawcreds@@YAXM@Z PROC NEAR			; pas_drawcreds, COMDAT
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
; Line 120
	mov	DWORD PTR _fadein$[ebp], 0
; Line 121
	fld	DWORD PTR _t$[ebp]
	fcomp	DWORD PTR __real@40000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L19979
; Line 122
	fld	DWORD PTR _t$[ebp]
	fmul	DWORD PTR __real@40491687
	fdiv	DWORD PTR __real@40800000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sin
	add	esp, 8
	fst	DWORD PTR tv181[ebp]
	fadd	ST(0), ST(0)
	fsubr	DWORD PTR __real@40000000
	fstp	DWORD PTR _fadein$[ebp]
$L19979:
; Line 123
	fld	DWORD PTR _t$[ebp]
	fcomp	DWORD PTR __real@40800000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $L19981
; Line 124
	fld	DWORD PTR __real@40c00000
	fsub	DWORD PTR _t$[ebp]
	fmul	DWORD PTR __real@40491687
	fdiv	DWORD PTR __real@40800000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sin
	add	esp, 8
	fst	DWORD PTR tv189[ebp]
	fadd	ST(0), ST(0)
	fsubr	DWORD PTR __real@40000000
	fstp	DWORD PTR _fadein$[ebp]
$L19981:
; Line 126
	push	106					; 0000006aH
	call	?glaSetTexture@@YAXH@Z			; glaSetTexture
	add	esp, 4
; Line 127
	push	7
	call	DWORD PTR __imp__glBegin@4
; Line 128
	push	1065353216				; 3f800000H
	push	1065353216				; 3f800000H
	push	1065353216				; 3f800000H
	call	DWORD PTR __imp__glColor3f@12
; Line 130
	push	OFFSET FLAT:??_C@_0M@GDEDCFLL@illuminator?$AA@
	push	1025758986				; 3d23d70aH
	push	1022739087				; 3cf5c28fH
	push	1022739087				; 3cf5c28fH
	push	0
	push	1058642330				; 3f19999aH
	fld	DWORD PTR _fadein$[ebp]
	fchs
	fmul	DWORD PTR __real@3fd9999a
	push	ecx
	fstp	DWORD PTR [esp]
	call	?glaDrawString@@YAXMMMMMMPAD@Z		; glaDrawString
	add	esp, 28					; 0000001cH
; Line 131
	push	OFFSET FLAT:??_C@_0P@ENDNLGBE@code?0?5graphics?$AA@
	push	1025758986				; 3d23d70aH
	push	1022739087				; 3cf5c28fH
	push	1022739087				; 3cf5c28fH
	push	0
	push	1056964608				; 3f000000H
	fld	DWORD PTR _fadein$[ebp]
	fmul	DWORD PTR __real@3fcccccd
	push	ecx
	fstp	DWORD PTR [esp]
	call	?glaDrawString@@YAXMMMMMMPAD@Z		; glaDrawString
	add	esp, 28					; 0000001cH
; Line 132
	push	OFFSET FLAT:??_C@_05NBLAGAKD@h?9ecs?$AA@
	push	1025758986				; 3d23d70aH
	push	1022739087				; 3cf5c28fH
	push	1022739087				; 3cf5c28fH
	push	0
	fld	DWORD PTR _fadein$[ebp]
	fmul	DWORD PTR __real@3f8ccccd
	fsubr	DWORD PTR __real@3d4ccccd
	push	ecx
	fstp	DWORD PTR [esp]
	push	0
	call	?glaDrawString@@YAXMMMMMMPAD@Z		; glaDrawString
	add	esp, 28					; 0000001cH
; Line 133
	push	OFFSET FLAT:??_C@_0BA@MEJABCBK@music?0?5graphics?$AA@
	push	1025758986				; 3d23d70aH
	push	1022739087				; 3cf5c28fH
	push	1022739087				; 3cf5c28fH
	push	0
	push	-1119040307				; bd4ccccdH
	fld	DWORD PTR _fadein$[ebp]
	fmul	DWORD PTR __real@3ffc28f6
	push	ecx
	fstp	DWORD PTR [esp]
	call	?glaDrawString@@YAXMMMMMMPAD@Z		; glaDrawString
	add	esp, 28					; 0000001cH
; Line 134
	push	OFFSET FLAT:??_C@_0BK@ONCMBCOC@hanzon?0?5summlan?0?5weird?5ed?$AA@
	push	1025758986				; 3d23d70aH
	push	1022739087				; 3cf5c28fH
	push	1022739087				; 3cf5c28fH
	push	0
	fld	DWORD PTR _fadein$[ebp]
	fmul	DWORD PTR __real@3f333333
	fadd	DWORD PTR __real@bf000000
	push	ecx
	fstp	DWORD PTR [esp]
	push	0
	call	?glaDrawString@@YAXMMMMMMPAD@Z		; glaDrawString
	add	esp, 28					; 0000001cH
; Line 135
	push	OFFSET FLAT:??_C@_05EMILFNFA@ideas?$AA@
	push	1025758986				; 3d23d70aH
	push	1022739087				; 3cf5c28fH
	push	1022739087				; 3cf5c28fH
	push	0
	fld	DWORD PTR _fadein$[ebp]
	fmul	DWORD PTR __real@3f570a3d
	fsubr	DWORD PTR __real@bf19999a
	push	ecx
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _fadein$[ebp]
	fmul	DWORD PTR __real@3fb5c28f
	push	ecx
	fstp	DWORD PTR [esp]
	call	?glaDrawString@@YAXMMMMMMPAD@Z		; glaDrawString
	add	esp, 28					; 0000001cH
; Line 136
	call	DWORD PTR __imp__glEnd@0
; Line 137
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?pas_drawcreds@@YAXM@Z ENDP				; pas_drawcreds
_TEXT	ENDS
PUBLIC	?p_aftershit_run@@YAXPAUEVENT@@@Z		; p_aftershit_run
PUBLIC	__real@40e00000
PUBLIC	__real@41800000
PUBLIC	__real@3fa00000
EXTRN	__imp__glLoadIdentity@0:NEAR
EXTRN	__imp__glMatrixMode@4:NEAR
EXTRN	__imp__glTexEnvi@12:NEAR
EXTRN	__imp__glBlendFunc@8:NEAR
EXTRN	__imp__glTranslatef@12:NEAR
EXTRN	__imp__glClearColor@16:NEAR
EXTRN	__imp__glEnable@4:NEAR
;	COMDAT __real@40e00000
CONST	SEGMENT
__real@40e00000 DD 040e00000r			; 7
CONST	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@3fa00000
CONST	SEGMENT
__real@3fa00000 DD 03fa00000r			; 1.25
; Function compile flags: /Odt /ZI
CONST	ENDS
;	COMDAT ?p_aftershit_run@@YAXPAUEVENT@@@Z
_TEXT	SEGMENT
_t$ = -4
_e$ = 8
?p_aftershit_run@@YAXPAUEVENT@@@Z PROC NEAR		; p_aftershit_run, COMDAT
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
; Line 143
	push	5889					; 00001701H
	call	DWORD PTR __imp__glMatrixMode@4
; Line 144
	call	DWORD PTR __imp__glLoadIdentity@0
; Line 145
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__glTranslatef@12
; Line 147
	push	5888					; 00001700H
	call	DWORD PTR __imp__glMatrixMode@4
; Line 148
	call	DWORD PTR __imp__glLoadIdentity@0
; Line 150
	push	2884					; 00000b44H
	call	DWORD PTR __imp__glDisable@4
; Line 151
	push	0
	push	0
	push	0
	push	0
	call	DWORD PTR __imp__glClearColor@16
; Line 152
	push	2912					; 00000b60H
	call	DWORD PTR __imp__glDisable@4
; Line 154
	push	3042					; 00000be2H
	call	DWORD PTR __imp__glEnable@4
; Line 155
	push	1
	push	1
	call	DWORD PTR __imp__glBlendFunc@8
; Line 156
	push	8448					; 00002100H
	push	8704					; 00002200H
	push	8960					; 00002300H
	call	DWORD PTR __imp__glTexEnvi@12
; Line 160
	mov	eax, DWORD PTR _e$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _t$[ebp], ecx
; Line 170
	push	111					; 0000006fH
	call	?glaSetTexture@@YAXH@Z			; glaSetTexture
	add	esp, 4
; Line 173
	push	1048576000				; 3e800000H
	push	1065353216				; 3f800000H
	fld	DWORD PTR _t$[ebp]
	fmul	DWORD PTR __real@40e00000
	push	ecx
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _t$[ebp]
	fmul	DWORD PTR __real@41200000
	push	ecx
	fstp	DWORD PTR [esp]
	call	?pas_drawbackground@@YAXMMMM@Z		; pas_drawbackground
	add	esp, 16					; 00000010H
; Line 178
	fld	DWORD PTR _t$[ebp]
	fcomp	DWORD PTR __real@40800000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $L19993
	fld	DWORD PTR _t$[ebp]
	fcomp	DWORD PTR __real@41200000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L19993
; Line 179
	fld	DWORD PTR _t$[ebp]
	fsub	DWORD PTR __real@40800000
	push	ecx
	fstp	DWORD PTR [esp]
	call	?pas_drawtitle@@YAXM@Z			; pas_drawtitle
	add	esp, 4
$L19993:
; Line 181
	fld	DWORD PTR _t$[ebp]
	fcomp	DWORD PTR __real@41200000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $L19994
	fld	DWORD PTR _t$[ebp]
	fcomp	DWORD PTR __real@41800000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L19994
; Line 182
	fld	DWORD PTR _t$[ebp]
	fsub	DWORD PTR __real@41200000
	push	ecx
	fstp	DWORD PTR [esp]
	call	?pas_drawcreds@@YAXM@Z			; pas_drawcreds
	add	esp, 4
$L19994:
; Line 184
	fld	DWORD PTR _t$[ebp]
	fcomp	DWORD PTR __real@3fa00000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L19991
	fld	DWORD PTR __real@3fa00000
	fsub	DWORD PTR _t$[ebp]
	fmul	DWORD PTR __real@40800000
	push	ecx
	fstp	DWORD PTR [esp]
	call	?pas_renderfade@@YAXM@Z			; pas_renderfade
	add	esp, 4
$L19991:
; Line 186
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?p_aftershit_run@@YAXPAUEVENT@@@Z ENDP			; p_aftershit_run
_TEXT	ENDS
END
